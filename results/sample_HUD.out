Switching logdir from './models/HUD/KSC_Corrected' to './experiments/results/HUD/KSC_Corrected'
{'model': {'base_learning_rate': 1e-06, 'target': 'ldm.models.diffusion.ddpm_HSI.LatentDiffusion', 'params': {'linear_start': 0.0015, 'linear_end': 0.0155, 'num_timesteps_cond': 1, 'log_every_t': 200, 'timesteps': 1000, 'loss_type': 'l2', 'first_stage_key': 'image', 'cond_stage_key': 'image', 'image_size': 32, 'channels': 13, 'cond_stage_trainable': False, 'concat_mode': False, 'scale_by_std': False, 'scale_factor': 20.0, 'monitor': 'val/loss_simple_ema', 'scheduler_config': {'target': 'ldm.lr_scheduler.LambdaLinearScheduler', 'params': {'warm_up_steps': [10000], 'cycle_lengths': [10000000000000], 'f_start': [1e-06], 'f_max': [1.0], 'f_min': [1.0]}}, 'unet_config': {'target': 'ldm.modules.diffusionmodules.openaimodel.UNetModel', 'params': {'image_size': 32, 'in_channels': 13, 'out_channels': 13, 'model_channels': 192, 'attention_resolutions': [1, 2, 4, 8], 'num_res_blocks': 2, 'channel_mult': [1, 2, 2, 4, 4], 'num_heads': 8, 'use_scale_shift_norm': True, 'resblock_updown': True}}, 'first_stage_config': {'target': 'ldm.models.hsi_encoder.VCA', 'params': {'in_channels': 176, 'out_channels': 13, 'ckpt_path': 'models/first_stage_models/HSI/VCA/KSC_Corrected/model.ckpt'}}, 'cond_stage_config': '__is_unconditional__'}}, 'data': {'target': 'main_HSI.DataModuleFromConfig', 'params': {'batch_size': 32, 'num_workers': 5, 'wrap': False, 'train': {'target': 'ldm.data.HSI.KSC_Corrected_train', 'params': {'size': 32}}, 'validation': {'target': 'ldm.data.HSI.KSC_Corrected_valid', 'params': {'size': 32}}}}}
Loading model from ./models/HUD/KSC_Corrected/model.ckpt
/data_ssy/latent-diffusion/scripts/sample_diffusion_HSI.py:264: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pl_sd = torch.load(ckpt, map_location="cpu")
LatentDiffusion: Running in eps-prediction mode
DiffusionWrapper has 295.00 M params.
Keeping EMAs of 522.
/data_ssy/latent-diffusion/ldm/models/hsi_encoder.py:196: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  sd = torch.load(path, map_location="cpu")["state_dict"]
Restored from models/first_stage_models/HSI/VCA/KSC_Corrected/model.ckpt
Training LatentDiffusion as an unconditional model.
global step: 5259
===========================================================================
logging to:
./experiments/results/HUD/KSC_Corrected
===========================================================================
{'dataset': 'KSC_Corrected', 'resume': './models/HUD/KSC_Corrected', 'n_samples': 8, 'eta': 1.0, 'vanilla_sample': False, 'logdir': './experiments/results/HUD', 'custom_steps': 250, 'batch_size': 4, 'base': ['./models/HUD/KSC_Corrected/config.yaml']}
Using DDIM sampling with 250 sampling steps and eta=1.0
Running unconditional sampling for 8 samples
Sampling Batches (unconditional):   0%|          | 0/2 [00:00<?, ?it/s]Plotting: Switched to EMA weights
Data shape for DDIM sampling is (4, 13, 32, 32), eta 1.0
Running DDIM Sampling with 250 timesteps

DDIM Sampler:   0%|          | 0/250 [00:00<?, ?it/s][A
DDIM Sampler:   0%|          | 1/250 [00:00<00:39,  6.25it/s][A
DDIM Sampler:   4%|▎         | 9/250 [00:00<00:06, 39.28it/s][A
DDIM Sampler:   7%|▋         | 17/250 [00:00<00:04, 53.33it/s][A
DDIM Sampler:  10%|█         | 25/250 [00:00<00:03, 60.71it/s][A
DDIM Sampler:  13%|█▎        | 33/250 [00:00<00:03, 65.05it/s][A
DDIM Sampler:  16%|█▋        | 41/250 [00:00<00:03, 67.83it/s][A
DDIM Sampler:  20%|█▉        | 49/250 [00:00<00:02, 69.70it/s][A
DDIM Sampler:  23%|██▎       | 57/250 [00:00<00:02, 70.93it/s][A
DDIM Sampler:  26%|██▌       | 65/250 [00:01<00:02, 71.77it/s][A
DDIM Sampler:  29%|██▉       | 73/250 [00:01<00:02, 72.35it/s][A
DDIM Sampler:  32%|███▏      | 81/250 [00:01<00:02, 72.75it/s][A
DDIM Sampler:  36%|███▌      | 89/250 [00:01<00:02, 73.08it/s][A
DDIM Sampler:  39%|███▉      | 97/250 [00:01<00:02, 73.30it/s][A
DDIM Sampler:  42%|████▏     | 105/250 [00:01<00:01, 73.46it/s][A
DDIM Sampler:  45%|████▌     | 113/250 [00:01<00:01, 73.57it/s][A
DDIM Sampler:  48%|████▊     | 121/250 [00:01<00:01, 73.64it/s][A
DDIM Sampler:  52%|█████▏    | 129/250 [00:01<00:01, 73.70it/s][A
DDIM Sampler:  55%|█████▍    | 137/250 [00:02<00:01, 73.78it/s][A
DDIM Sampler:  58%|█████▊    | 145/250 [00:02<00:01, 73.80it/s][A
DDIM Sampler:  61%|██████    | 153/250 [00:02<00:01, 73.62it/s][A
DDIM Sampler:  64%|██████▍   | 161/250 [00:02<00:01, 73.58it/s][A
DDIM Sampler:  68%|██████▊   | 169/250 [00:02<00:01, 73.51it/s][A
DDIM Sampler:  71%|███████   | 177/250 [00:02<00:00, 73.56it/s][A
DDIM Sampler:  74%|███████▍  | 185/250 [00:02<00:00, 73.59it/s][A
DDIM Sampler:  77%|███████▋  | 193/250 [00:02<00:00, 73.58it/s][A
DDIM Sampler:  80%|████████  | 201/250 [00:02<00:00, 73.61it/s][A
DDIM Sampler:  84%|████████▎ | 209/250 [00:02<00:00, 73.61it/s][A
DDIM Sampler:  87%|████████▋ | 217/250 [00:03<00:00, 73.60it/s][A
DDIM Sampler:  90%|█████████ | 225/250 [00:03<00:00, 73.59it/s][A
DDIM Sampler:  93%|█████████▎| 233/250 [00:03<00:00, 73.62it/s][A
DDIM Sampler:  96%|█████████▋| 241/250 [00:03<00:00, 73.64it/s][A
DDIM Sampler: 100%|█████████▉| 249/250 [00:03<00:00, 73.66it/s][ADDIM Sampler: 100%|██████████| 250/250 [00:03<00:00, 70.56it/s]
Plotting: Restored training weights
Throughput for this batch: 1.1225132089474197
Sampling Batches (unconditional):  50%|█████     | 1/2 [00:03<00:03,  3.75s/it]Plotting: Switched to EMA weights
Data shape for DDIM sampling is (4, 13, 32, 32), eta 1.0
Running DDIM Sampling with 250 timesteps

DDIM Sampler:   0%|          | 0/250 [00:00<?, ?it/s][A
DDIM Sampler:   3%|▎         | 8/250 [00:00<00:03, 72.50it/s][A
DDIM Sampler:   6%|▋         | 16/250 [00:00<00:03, 71.41it/s][A
DDIM Sampler:  10%|▉         | 24/250 [00:00<00:03, 71.95it/s][A
DDIM Sampler:  13%|█▎        | 32/250 [00:00<00:03, 72.24it/s][A
DDIM Sampler:  16%|█▌        | 40/250 [00:00<00:02, 72.39it/s][A
DDIM Sampler:  19%|█▉        | 48/250 [00:00<00:02, 72.51it/s][A
DDIM Sampler:  22%|██▏       | 56/250 [00:00<00:02, 72.58it/s][A
DDIM Sampler:  26%|██▌       | 64/250 [00:00<00:02, 72.64it/s][A
DDIM Sampler:  29%|██▉       | 72/250 [00:00<00:02, 72.62it/s][A
DDIM Sampler:  32%|███▏      | 80/250 [00:01<00:02, 72.65it/s][A
DDIM Sampler:  35%|███▌      | 88/250 [00:01<00:02, 72.65it/s][A
DDIM Sampler:  38%|███▊      | 96/250 [00:01<00:02, 72.49it/s][A
DDIM Sampler:  42%|████▏     | 104/250 [00:01<00:02, 69.39it/s][A
DDIM Sampler:  45%|████▍     | 112/250 [00:01<00:01, 70.31it/s][A
DDIM Sampler:  48%|████▊     | 120/250 [00:01<00:01, 71.02it/s][A
DDIM Sampler:  51%|█████     | 128/250 [00:01<00:01, 71.52it/s][A
DDIM Sampler:  54%|█████▍    | 136/250 [00:01<00:01, 71.86it/s][A
DDIM Sampler:  58%|█████▊    | 144/250 [00:02<00:01, 72.13it/s][A
DDIM Sampler:  61%|██████    | 152/250 [00:02<00:01, 72.29it/s][A
DDIM Sampler:  64%|██████▍   | 160/250 [00:02<00:01, 72.40it/s][A
DDIM Sampler:  67%|██████▋   | 168/250 [00:02<00:01, 72.47it/s][A
DDIM Sampler:  70%|███████   | 176/250 [00:02<00:01, 72.55it/s][A
DDIM Sampler:  74%|███████▎  | 184/250 [00:02<00:00, 72.61it/s][A
DDIM Sampler:  77%|███████▋  | 192/250 [00:02<00:00, 72.64it/s][A
DDIM Sampler:  80%|████████  | 200/250 [00:02<00:00, 72.66it/s][A
DDIM Sampler:  83%|████████▎ | 208/250 [00:02<00:00, 72.68it/s][A
DDIM Sampler:  86%|████████▋ | 216/250 [00:02<00:00, 72.69it/s][A
DDIM Sampler:  90%|████████▉ | 224/250 [00:03<00:00, 72.72it/s][A
DDIM Sampler:  93%|█████████▎| 232/250 [00:03<00:00, 72.69it/s][A
DDIM Sampler:  96%|█████████▌| 240/250 [00:03<00:00, 72.70it/s][A
DDIM Sampler:  99%|█████████▉| 248/250 [00:03<00:00, 72.66it/s][ADDIM Sampler: 100%|██████████| 250/250 [00:03<00:00, 72.24it/s]
Plotting: Restored training weights
Throughput for this batch: 1.1550972649326088
Finish after generating 8 samples
Sampling Batches (unconditional):  50%|█████     | 1/2 [00:07<00:07,  7.39s/it]
sampling of 8 images finished in 0.12 minutes.
done.
